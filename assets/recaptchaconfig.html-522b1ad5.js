import{_ as o,M as r,p as i,q as d,R as e,t,N as s,V as a,a1 as c}from"./framework-c4f3d865.js";const p={},l=e("h1",{id:"recaptchaconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#recaptchaconfig","aria-hidden":"true"},"#"),t(" ReCaptchaConfig")],-1),h=e("p",null,"Configuration for a ReCaptcha client.",-1),u=e("strong",null,"Type:",-1),g=e("br",null,null,-1),k=e("strong",null,"Namespace:",-1),f=e("br",null,null,-1),m=e("strong",null,"Assembly:",-1),v=c(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReCaptchaConfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><p>Creates a new ReCaptchaConfig.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">ReCaptchaConfig</span><span class="token punctuation">(</span>
    <span class="token class-name"><span class="token keyword">string</span></span> siteKey<span class="token punctuation">,</span>
    <span class="token class-name"><span class="token keyword">string</span></span> hostName<span class="token punctuation">,</span>
    <span class="token class-name"><span class="token keyword">string</span></span> language <span class="token operator">=</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>
    <span class="token class-name"><span class="token keyword">string</span></span> tokenRecievedHtml <span class="token operator">=</span> <span class="token string">&quot;Token recieved: %token%&quot;</span><span class="token punctuation">,</span>
    <span class="token class-name"><span class="token keyword">string</span></span> tokenRecievedHookedHtml <span class="token operator">=</span> <span class="token string">&quot;Token recieved and sent to application.&quot;</span><span class="token punctuation">,</span>
    <span class="token class-name">HttpServerConfig<span class="token punctuation">?</span></span> httpConfiguration <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string</code> siteKey</td><td>The SiteKey for the Google reCAPTCHA service.</td></tr><tr><td><code>string</code> hostName</td><td>The name of the virtual host on which the reCAPTCHA is hosted. Should represent your application.</td></tr><tr><td><em><code>string</code> language</em></td><td>The language for the Google reCAPTCHA service.</td></tr><tr><td><em><code>string</code> tokenRecievedHtml</em></td><td>The HTML which gets displayed after the user verifed the reCAPTCHA. Use %token% to embed the token inside the message.</td></tr><tr><td><em><code>string</code> tokenRecievedHookedHtml</em></td><td>The HTML which gets displayed after the user verifed the reCAPTCHA and its hooked to the application. Use %token% to embed the token inside the message.</td></tr><tr><td><em><code>HttpServerConfig?</code> httpConfiguration</em></td><td>The configuration for the HttpServer.</td></tr></tbody></table><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="sitekey" tabindex="-1"><a class="header-anchor" href="#sitekey" aria-hidden="true">#</a> SiteKey</h3><p>The SiteKey for the Google reCAPTCHA service</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> none</p><h3 id="hostname" tabindex="-1"><a class="header-anchor" href="#hostname" aria-hidden="true">#</a> HostName</h3><p>The name of the virtual host on which the reCAPTCHA is hosted. Should represent your application.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> none</p><h3 id="language" tabindex="-1"><a class="header-anchor" href="#language" aria-hidden="true">#</a> Language</h3><p>The language for the Google reCAPTCHA service.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>en</code></p><h3 id="tokenrecievedhtml" tabindex="-1"><a class="header-anchor" href="#tokenrecievedhtml" aria-hidden="true">#</a> TokenRecievedHtml</h3><p>The HTML which gets displayed after the user verifed the reCAPTCHA. Use %token% to embed the token inside the message.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>Token recieved: %token%</code></p><h3 id="tokenrecievedhookedhtml" tabindex="-1"><a class="header-anchor" href="#tokenrecievedhookedhtml" aria-hidden="true">#</a> TokenRecievedHookedHtml</h3><p>The HTML which gets displayed after the user verifed the reCAPTCHA and its hooked to the application. Use %token% to embed the token inside the message.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>Token recieved and sent to application.</code></p><h3 id="tokenrecievedhookedhtml-1" tabindex="-1"><a class="header-anchor" href="#tokenrecievedhookedhtml-1" aria-hidden="true">#</a> TokenRecievedHookedHtml</h3><p>The configuration for the HttpServer</p><p><strong>Type</strong>: <code>HttpServerConfig</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>new()</code></p>`,24);function b(C,T){const n=r("RouterLink");return i(),d("div",null,[l,h,e("p",null,[u,t(" Class "),g,k,t(),s(n,{to:"/reference/recaptcha.desktop.wpf/configuration/"},{default:a(()=>[t("ReCaptcha.Desktop.WPF.Configuration")]),_:1}),f,m,t(),s(n,{to:"/reference/recaptcha.desktop.wpf/"},{default:a(()=>[t("ReCaptcha.Desktop.WPF")]),_:1})]),v])}const _=o(p,[["render",b],["__file","recaptchaconfig.html.vue"]]);export{_ as default};
