import{_ as a,M as d,p as c,q as t,R as e,t as o,N as n,V as s,a1 as h}from"./framework-c4f3d865.js";const i={},l=e("h1",{id:"darktheme",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#darktheme","aria-hidden":"true"},"#"),o(" DarkTheme")],-1),p=e("p",null,"Dark theme for ReCaptcha control.",-1),u=e("strong",null,"Type:",-1),g=e("br",null,null,-1),b=e("strong",null,"Namespace:",-1),k=e("br",null,null,-1),f=e("strong",null,"Assembly:",-1),m=e("br",null,null,-1),x=e("strong",null,"Inherits from:",-1),B=h(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DarkTheme</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ITheme</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><p>Creates a new DarkTheme.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">DarkTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> Background</h3><p>The main backhround color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(34, 34, 34))</code></p><h3 id="border" tabindex="-1"><a class="header-anchor" href="#border" aria-hidden="true">#</a> Border</h3><p>The main border color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(72, 72, 72))</code></p><h3 id="foreground" tabindex="-1"><a class="header-anchor" href="#foreground" aria-hidden="true">#</a> Foreground</h3><p>The main foreground color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(255, 255, 255))</code></p><h3 id="foregroundsecondary" tabindex="-1"><a class="header-anchor" href="#foregroundsecondary" aria-hidden="true">#</a> ForegroundSecondary</h3><p>The secondary foreground color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(170, 170, 170))</code></p><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> Error</h3><p>The error message color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(255, 0, 0))</code></p><h3 id="checkboxbackground" tabindex="-1"><a class="header-anchor" href="#checkboxbackground" aria-hidden="true">#</a> CheckBoxBackground</h3><p>The checkbox background color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(40, 40, 40))</code></p><h3 id="checkboxbackgroundhover" tabindex="-1"><a class="header-anchor" href="#checkboxbackgroundhover" aria-hidden="true">#</a> CheckBoxBackgroundHover</h3><p>The checkbox background color when hovered.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(40, 40, 40))</code></p><h3 id="checkboxbackgroundpressed" tabindex="-1"><a class="header-anchor" href="#checkboxbackgroundpressed" aria-hidden="true">#</a> CheckBoxBackgroundPressed</h3><p>The checkbox background color when pressed.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(60, 60, 60))</code></p><h3 id="checkboxborder" tabindex="-1"><a class="header-anchor" href="#checkboxborder" aria-hidden="true">#</a> CheckBoxBorder</h3><p>The checkbox border color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(84, 84, 84))</code></p><h3 id="checkboxborderhover" tabindex="-1"><a class="header-anchor" href="#checkboxborderhover" aria-hidden="true">#</a> CheckBoxBorderHover</h3><p>The checkbox border color when hovered.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(100, 100, 100))</code></p><h3 id="checkboxborderpressed" tabindex="-1"><a class="header-anchor" href="#checkboxborderpressed" aria-hidden="true">#</a> CheckBoxBorderPressed</h3><p>The checkbox border color when pressed.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(115, 115, 115))</code></p><h3 id="checkboxspinner" tabindex="-1"><a class="header-anchor" href="#checkboxspinner" aria-hidden="true">#</a> CheckBoxSpinner</h3><p>The checkbox loading spinner color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(78, 144, 245))</code></p><h3 id="checkboxcheckmark" tabindex="-1"><a class="header-anchor" href="#checkboxcheckmark" aria-hidden="true">#</a> CheckBoxCheckmark</h3><p>The checkbox checkmark color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> <code>init</code><br><strong>Default Value:</strong> <code>new SolidColorBrush(Color.FromRgb(0, 158, 66))</code></p>`,44);function C(_,T){const r=d("RouterLink");return c(),t("div",null,[l,p,e("p",null,[u,o(" Class "),g,b,o(),n(r,{to:"/reference/recaptcha.desktop.wpf/ui/themes/"},{default:s(()=>[o("ReCaptcha.Desktop.WPF.UI.Themes")]),_:1}),k,f,o(),n(r,{to:"/reference/recaptcha.desktop.wpf/"},{default:s(()=>[o("ReCaptcha.Desktop.WPF")]),_:1}),m,x,o(),n(r,{to:"/reference/recaptcha.desktop.wpf/ui/themes/interfaces/itheme.html"},{default:s(()=>[o("ITheme")]),_:1})]),B])}const v=a(i,[["render",C],["__file","darktheme.html.vue"]]);export{v as default};
