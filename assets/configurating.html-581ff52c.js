import{_ as i,M as t,p as c,q as r,R as n,t as e,N as a,V as l,a1 as p}from"./framework-c4f3d865.js";const d={},u=n("h1",{id:"configurating",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#configurating","aria-hidden":"true"},"#"),e(" Configurating")],-1),h=n("p",null,[e("The "),n("code",null,"ReCaptchaConfig"),e(" is the main configuration. This configuration configures everything from the Google sitekey to what the end user sees.")],-1),k=n("code",null,"ReCaptchaConfig",-1),g=p(`<h3 id="creating-an-instance" tabindex="-1"><a class="header-anchor" href="#creating-an-instance" aria-hidden="true">#</a> Creating an instance</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">ReCaptchaConfig</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ReCaptchaConfig</span><span class="token punctuation">(</span>
    <span class="token named-parameter punctuation">siteKey</span><span class="token punctuation">:</span> <span class="token string">&quot;GOOGLE_SITE_KEY&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">hostName</span><span class="token punctuation">:</span> <span class="token string">&quot;HOST_NAME&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">language</span><span class="token punctuation">:</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">tokenRecievedHtml</span><span class="token punctuation">:</span> <span class="token string">&quot;Token recieved: %token%&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">tokenRecievedHookedHtml</span><span class="token punctuation">:</span> <span class="token string">&quot;Token recieved and sent to application.&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">httpConfiguration</span><span class="token punctuation">:</span> serverConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Optionally you can create a <code>ReCaptchaConfig</code> even easier:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">ReCaptchaConfig</span> config <span class="token operator">=</span> <span class="token string">&quot;GOOGLE_SITE_KEY&quot;</span><span class="token punctuation">.</span><span class="token function">AsReCaptchaConfig</span><span class="token punctuation">(</span><span class="token string">&quot;HOST_NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Token recieved: %token%&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Token recieved and sent to application.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="sitekey" tabindex="-1"><a class="header-anchor" href="#sitekey" aria-hidden="true">#</a> SiteKey</h4>`,5),m={href:"http://www.google.com/recaptcha/admin",target:"_blank",rel:"noopener noreferrer"},f=n("h4",{id:"hostname",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hostname","aria-hidden":"true"},"#"),e(" HostName")],-1),v=n("p",null,"The reCAPTCHA token also stores the hostname of the site on which the verifcaiton was made. Since we are using a windows desktop framework and not an actual website we can modify our hostname to whatever we like. Just make sure that this hostname is whitelisted on your reCAPTCHA authorized domainss To not get confused you should set this to something which represents your application for example the applications name or website.",-1),_=n("h4",{id:"language",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#language","aria-hidden":"true"},"#"),e(" Language")],-1),w={href:"https://developers.google.com/recaptcha/docs/language",target:"_blank",rel:"noopener noreferrer"},b=n("h4",{id:"tokenrecievedhtml",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tokenrecievedhtml","aria-hidden":"true"},"#"),e(" TokenRecievedHtml")],-1),C=n("p",null,[e("This is the HTML which gets displayed when the end user has successfully verifed the reCAPTCHA. This is only visible if something went wrong while sending back the token to the application. Normally a user should never see this. You can use "),n("code",null,"%token%"),e(" to embed the reCAPTCHA token.")],-1),T=n("h4",{id:"tokenrecievedhookedhtml",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tokenrecievedhookedhtml","aria-hidden":"true"},"#"),e(" TokenRecievedHookedHtml")],-1),y=n("a",{href:"#tokenrecievedhtml"},"TokenRecievedHtml",-1),q={href:"https://learn.microsoft.com/en-us/dotnet/api/microsoft.web.webview2.winforms.webview2.webmessagereceived",target:"_blank",rel:"noopener noreferrer"},x={href:"https://learn.microsoft.com/en-us/microsoft-edge/webview2/",target:"_blank",rel:"noopener noreferrer"};function A(H,R){const o=t("RouterLink"),s=t("ExternalLinkIcon");return c(),r("div",null,[u,h,n("p",null,[e("To learn more about the "),k,e(" visit the "),a(o,{to:"/reference/recaptcha.desktop.wpf/configuration/recaptchaconfig.html"},{default:l(()=>[e("Reference")]),_:1}),e(". It contains an explanation of all properties and functions.")]),g,n("p",null,[e("You will need a Google reCAPTCHA site key. You can "),n("a",m,[e("sign up for an API key"),a(s)]),e(" at the official Google reCAPTCHA developers portal.")]),f,v,_,n("p",null,[e("You can optionally define a language in which the Google reCAPTCHA will get rendered. The "),n("a",w,[e("language code"),a(s)]),e(" will be directly passed to the hosted widget.")]),b,C,T,n("p",null,[e("This is similar to the "),y,e(" but it will only get displyed when a "),n("a",q,[e("WebMessageRecieved"),a(s)]),e(" event is hooked on a "),n("a",x,[e("WebView2"),a(s)]),e(`. The user will propably never see this but you can add for example a "loading spinner" or a "Please close this window" message whenever it's unexpectedly visible.`)])])}const N=i(d,[["render",A],["__file","configurating.html.vue"]]);export{N as default};
