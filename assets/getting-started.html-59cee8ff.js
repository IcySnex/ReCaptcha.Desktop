import{_ as i,M as c,p as l,q as u,R as s,t as n,N as a,V as p,a1 as o}from"./framework-c4f3d865.js";const r={},k=s("h1",{id:"getting-started",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),n(" Getting Started")],-1),d=s("h2",{id:"prerequisites",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),m={href:"https://learn.microsoft.com/en-us/dotnet/core/tools/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.nuget.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://learn.microsoft.com/en-us/dotnet/desktop/wpf",target:"_blank",rel:"noopener noreferrer"},v={href:"https://learn.microsoft.com/en-us/windows/apps/winui/winui3/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://learn.microsoft.com/windows/uwp/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://learn.microsoft.com/en-us/dotnet/desktop/winforms",target:"_blank",rel:"noopener noreferrer"},_=s("li",null,"A Google reCAPTCHA site key",-1),C=o(`<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>This section will explain how to use ReCaptcha.Desktop with an UI framework. Generally the library is used the same for all UI frameworks, but there are a few small adjustments to the respective framework, such as naming conventions or UI related properties.</p><ul><li><strong>Step 1:</strong> Install ReCaptcha.Desktop package</li></ul><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>dotnet add &lt;PROJECT&gt; package ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WPF <span class="token comment"># WPF</span>
dotnet add &lt;PROJECT&gt; package ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinUI <span class="token comment"># WinUI3</span>
dotnet add &lt;PROJECT&gt; package ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>UWP <span class="token comment"># UWP</span>
dotnet add &lt;PROJECT&gt; package ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinForms <span class="token comment"># WinForms </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Step 2:</strong> Import ReCaptcha.Desktop dependencies</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// WPF</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WPF<span class="token punctuation">.</span>Client</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WPF<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>Interfaces</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WPF<span class="token punctuation">.</span>Configuration</span><span class="token punctuation">;</span>
<span class="token comment">// WinUI</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinUI<span class="token punctuation">.</span>Client</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinUI<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>Interfaces</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinUI<span class="token punctuation">.</span>Configuration</span><span class="token punctuation">;</span>
<span class="token comment">// UWP</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>UWP<span class="token punctuation">.</span>Client</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>UWP<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>Interfaces</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>UWP<span class="token punctuation">.</span>Configuration</span><span class="token punctuation">;</span>
<span class="token comment">// WinForms</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinForms<span class="token punctuation">.</span>Client</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinForms<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>Interfaces</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ReCaptcha<span class="token punctuation">.</span>Desktop<span class="token punctuation">.</span>WinForms<span class="token punctuation">.</span>Configuration</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),b=s("strong",null,"Step 3:",-1),W=o(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">WindowConfig</span> uiConfig <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;WINDOW_TITLE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// WPF</span>
<span class="token class-name">WindowConfig</span> uiConfig <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;WINDOW_TITLE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// WinUI3</span>
<span class="token class-name">PopupConfig</span> uiConfig <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;POPUP_TITLE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// UWP</span>
<span class="token class-name">FormConfig</span> uiConfig <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;FORM_TITLE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// WinForms </span>

<span class="token class-name">ReCaptchaConfig</span> config <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;SITE_KEY&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;HOST_NAME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IReCaptchaClient</span> reCaptcha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ReCaptchaClient</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> uiConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),R=s("strong",null,"Step 4:",-1),y=s("em",null,"(Optional)",-1),I=o(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>reCaptcha<span class="token punctuation">.</span>VerificationRecieved <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Token: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Token</span><span class="token punctuation">}</span></span><span class="token string">\\nOccurred At: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>OccurredAt</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;Verification recieved&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

reCaptcha<span class="token punctuation">.</span>VerificationCancelled <span class="token operator">+=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Occurred At: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>OccurredAt</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;Verification cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Step 4:</strong> Run verification</li></ul>`,2),P=s("code",null,"reCaptcha.VerifyAsync",-1),q=o(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">CancellationTokenSource</span> cts <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span>TimeSpan<span class="token punctuation">.</span><span class="token function">FromMinutes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> token <span class="token operator">=</span> <span class="token keyword">await</span> reCaptcha<span class="token punctuation">.</span><span class="token function">VerifyAsync</span><span class="token punctuation">(</span>cts<span class="token punctuation">.</span>Token<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="that-s-it" tabindex="-1"><a class="header-anchor" href="#that-s-it" aria-hidden="true">#</a> That&#39;s it!</h2>`,2);function T(x,D){const t=c("ExternalLinkIcon"),e=c("RouterLink");return l(),u("div",null,[k,d,s("ul",null,[s("li",null,[s("a",m,[n(".NET CLI"),a(t)]),n(" or IDE with "),s("a",h,[n("NuGet Package Manager"),a(t)])]),s("li",null,[n("Project using "),s("a",g,[n("WPF"),a(t)]),n(" or "),s("a",v,[n("WinUI3"),a(t)]),n(" or "),s("a",f,[n("UWP"),a(t)]),n(" or "),s("a",w,[n("WinForms"),a(t)])]),_]),C,s("ul",null,[s("li",null,[b,n(" Create ReCaptcha "),a(e,{to:"/reference/recaptcha.desktop.wpf/configuration/recaptchaconfig.html"},{default:p(()=>[n("configuration")]),_:1}),n(" , "),a(e,{to:"/reference/recaptcha.desktop.wpf/configuration/windowconfig.html"},{default:p(()=>[n("window configuration")]),_:1}),n(" & "),a(e,{to:"/reference/recaptcha.desktop.wpf/client/interfaces/irecaptchaclient.html"},{default:p(()=>[n("client")]),_:1})])]),W,s("ul",null,[s("li",null,[R,n(" Hook "),a(e,{to:"/reference/recaptcha.desktop/client/interfaces/irecaptchaclient.html#verificationrecieved"},{default:p(()=>[n("events")]),_:1}),n(),y])]),I,s("p",null,[n("Running "),a(e,{to:"/reference/recaptcha.desktop.wpf/client/interfaces/irecaptchaclient.html#verifyasync"},{default:p(()=>[P]),_:1}),n(" will show a new window on WPF and WinUI3. On WinForms a new form will be shown. Since multi windowing is really limited in UWP a popup will be shown instead.")]),q,s("p",null,[n("As you can see this wasn't really difficult, was it? Now we can start learning about advanced stuff like "),a(e,{to:"/guide/configurating.html"},{default:p(()=>[n("configuring our ReCaptchaClient")]),_:1}),n(` or widgets that look just like the original "I'm not a robot" widget.`)])])}const F=i(r,[["render",T],["__file","getting-started.html.vue"]]);export{F as default};
