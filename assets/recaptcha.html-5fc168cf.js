import{_ as i,M as n,p as c,q as d,R as e,t as r,N as o,V as a,a1 as h}from"./framework-c4f3d865.js";const p={},l=e("h1",{id:"recaptcha",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#recaptcha","aria-hidden":"true"},"#"),r(" ReCaptcha")],-1),u=e("p",null,"ReCaptcha control that mimics the original Google reCAPTCHA widget.",-1),g=e("strong",null,"Type:",-1),f=e("br",null,null,-1),m=e("strong",null,"Namespace:",-1),b=e("br",null,null,-1),v=e("strong",null,"Assembly:",-1),_=e("br",null,null,-1),x=e("strong",null,"Inherits from:",-1),T={href:"https://learn.microsoft.com/dotnet/api/system.windows.controls.contentcontrol",target:"_blank",rel:"noopener noreferrer"},y=h(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReCaptcha</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ContentControl</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><p>Creates a new ReCaptcha control.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">ReCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="verificationrequested" tabindex="-1"><a class="header-anchor" href="#verificationrequested" aria-hidden="true">#</a> VerificationRequested</h3><p>Fires when the user requests a verification.</p><p><strong>Type</strong>: <code>EventHandler?</code><br><strong>Modifier:</strong> <code>event</code><br><strong>Default Value:</strong> none</p><h3 id="verificationremoved" tabindex="-1"><a class="header-anchor" href="#verificationremoved" aria-hidden="true">#</a> VerificationRemoved</h3><p>Fires when the user removes a verification or stops a verification request.</p><p><strong>Type</strong>: <code>EventHandler?</code><br><strong>Modifier:</strong> <code>event</code><br><strong>Default Value:</strong> none</p><h3 id="verificationrequestedcommand" tabindex="-1"><a class="header-anchor" href="#verificationrequestedcommand" aria-hidden="true">#</a> VerificationRequestedCommand</h3><p>The command that gets executed when the user requests a verification.</p><p><strong>Type</strong>: <code>ICommand</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> none</p><h3 id="verificationrequestedcommandparameter" tabindex="-1"><a class="header-anchor" href="#verificationrequestedcommandparameter" aria-hidden="true">#</a> VerificationRequestedCommandParameter</h3><p>The command that gets executed when the user requests a verification.</p><p><strong>Type</strong>: <code>object</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> none</p><h3 id="verificationremovedcommand" tabindex="-1"><a class="header-anchor" href="#verificationremovedcommand" aria-hidden="true">#</a> VerificationRemovedCommand</h3><p>The command that gets executed when the user removes a verification or stops a verification request.</p><p><strong>Type</strong>: <code>ICommand</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> none</p><h3 id="verificationremovedcommandparameter" tabindex="-1"><a class="header-anchor" href="#verificationremovedcommandparameter" aria-hidden="true">#</a> VerificationRemovedCommandParameter</h3><p>The command that gets executed when the user removes a verification.</p><p><strong>Type</strong>: <code>object</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> none</p><h3 id="theme" tabindex="-1"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> Theme</h3><p>The theme used by the ReCaptcha control.</p><p><strong>Type</strong>: <code>ITheme</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>ITheme.Light()</code></p><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> Icon</h3><p>The icon source shown on the right side of the ReCaptcha control.</p><p><strong>Type</strong>: <code>ImageSource</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>new BitmapImage(new(&quot;pack://application:,,,/ReCaptcha.Desktop.WPF;component/UI/Assets/Icon.png&quot;))</code></p><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> Title</h3><p>The title shown on the right side of the ReCaptcha control.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>&quot;reCAPTCHA&quot;</code></p><h3 id="firsturi" tabindex="-1"><a class="header-anchor" href="#firsturi" aria-hidden="true">#</a> FirstUri</h3><p>The uri thats gets opened in the default browser when clicked on the first hyperlink.</p><p><strong>Type</strong>: <code>Uri</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>&quot;https://policies.google.com/privacy&quot;</code></p><h3 id="firsturitext" tabindex="-1"><a class="header-anchor" href="#firsturitext" aria-hidden="true">#</a> FirstUriText</h3><p>The text of the first hyperlink.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>&quot;Privacy&quot;</code></p><h3 id="secondaryuri" tabindex="-1"><a class="header-anchor" href="#secondaryuri" aria-hidden="true">#</a> SecondaryUri</h3><p>The uri thats gets opened in the default browser when clicked on the second hyperlink.</p><p><strong>Type</strong>: <code>Uri</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>&quot;https://policies.google.com/terms&quot;</code></p><h3 id="secondaryuritext" tabindex="-1"><a class="header-anchor" href="#secondaryuritext" aria-hidden="true">#</a> SecondaryUriText</h3><p>The text of the secondary hyperlink.</p><p><strong>Type</strong>: <code>string</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>&quot;Terms&quot;</code></p><h3 id="ischecked" tabindex="-1"><a class="header-anchor" href="#ischecked" aria-hidden="true">#</a> IsChecked</h3><p>Wether the ReCaptcha control is checked, unchecked or loading.</p><p><strong>Type</strong>: <code>bool</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>false</code></p><h3 id="isloading" tabindex="-1"><a class="header-anchor" href="#isloading" aria-hidden="true">#</a> IsLoading</h3><p>Wether the ReCaptcha control shows loading.</p><p><strong>Type</strong>: <code>bool</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>false</code></p><h3 id="errormessage" tabindex="-1"><a class="header-anchor" href="#errormessage" aria-hidden="true">#</a> ErrorMessage</h3><p>The error message which gets displayed if not null.</p><p><strong>Type</strong>: <code>string?</code><br><strong>Modifier:</strong> none <br><strong>Default Value:</strong> <code>null</code></p>`,53);function k(C,q){const t=n("RouterLink"),s=n("ExternalLinkIcon");return c(),d("div",null,[l,u,e("p",null,[g,r(" Class "),f,m,r(),o(t,{to:"/reference/recaptcha.desktop.wpf/ui/"},{default:a(()=>[r("ReCaptcha.Desktop.WPF.UI")]),_:1}),b,v,r(),o(t,{to:"/reference/recaptcha.desktop.wpf/"},{default:a(()=>[r("ReCaptcha.Desktop.WPF")]),_:1}),_,x,r(),e("a",T,[r("ContentControl"),o(s)])]),y])}const w=i(p,[["render",k],["__file","recaptcha.html.vue"]]);export{w as default};
