import{_ as s,M as c,p as d,q as h,R as e,t as r,N as n,V as a,a1 as t}from"./framework-c4f3d865.js";const i={},p=e("h1",{id:"itheme",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#itheme","aria-hidden":"true"},"#"),r(" ITheme")],-1),l=e("p",null,"The interface for custom themes.",-1),u=e("strong",null,"Type:",-1),g=e("br",null,null,-1),b=e("strong",null,"Namespace:",-1),k=e("br",null,null,-1),f=e("strong",null,"Assembly:",-1),x=t(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ITheme</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> Background</h3><p>The main backhround color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="border" tabindex="-1"><a class="header-anchor" href="#border" aria-hidden="true">#</a> Border</h3><p>The main border color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="foreground" tabindex="-1"><a class="header-anchor" href="#foreground" aria-hidden="true">#</a> Foreground</h3><p>The main foreground color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="foregroundsecondary" tabindex="-1"><a class="header-anchor" href="#foregroundsecondary" aria-hidden="true">#</a> ForegroundSecondary</h3><p>The secondary foreground color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> Error</h3><p>The error message color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxbackground" tabindex="-1"><a class="header-anchor" href="#checkboxbackground" aria-hidden="true">#</a> CheckBoxBackground</h3><p>The checkbox background color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxbackgroundhover" tabindex="-1"><a class="header-anchor" href="#checkboxbackgroundhover" aria-hidden="true">#</a> CheckBoxBackgroundHover</h3><p>The checkbox background color when hovered.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxbackgroundpressed" tabindex="-1"><a class="header-anchor" href="#checkboxbackgroundpressed" aria-hidden="true">#</a> CheckBoxBackgroundPressed</h3><p>The checkbox background color when pressed.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxborder" tabindex="-1"><a class="header-anchor" href="#checkboxborder" aria-hidden="true">#</a> CheckBoxBorder</h3><p>The checkbox border color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxborderhover" tabindex="-1"><a class="header-anchor" href="#checkboxborderhover" aria-hidden="true">#</a> CheckBoxBorderHover</h3><p>The checkbox border color when hovered.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxborderpressed" tabindex="-1"><a class="header-anchor" href="#checkboxborderpressed" aria-hidden="true">#</a> CheckBoxBorderPressed</h3><p>The checkbox border color when pressed.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxspinner" tabindex="-1"><a class="header-anchor" href="#checkboxspinner" aria-hidden="true">#</a> CheckBoxSpinner</h3><p>The checkbox loading spinner color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h3 id="checkboxcheckmark" tabindex="-1"><a class="header-anchor" href="#checkboxcheckmark" aria-hidden="true">#</a> CheckBoxCheckmark</h3><p>The checkbox checkmark color.</p><p><strong>Type</strong>: <code>Brush</code><br><strong>Modifier:</strong> none</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="light" tabindex="-1"><a class="header-anchor" href="#light" aria-hidden="true">#</a> Light</h3><p>Creates a new light theme.</p><p><strong>Returns:</strong> A new light theme.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">ITheme</span> <span class="token function">Light</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="dark" tabindex="-1"><a class="header-anchor" href="#dark" aria-hidden="true">#</a> Dark</h3><p>Creates a new dark theme.</p><p><strong>Returns:</strong> A new dark theme.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">ITheme</span> <span class="token function">Dark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,50);function m(T,B){const o=c("RouterLink");return d(),h("div",null,[p,l,e("p",null,[u,r(" Interface "),g,b,r(),n(o,{to:"/reference/recaptcha.desktop.wpf/ui/themes/interfaces/"},{default:a(()=>[r("ReCaptcha.Desktop.WPF.UI.Themes.Interfaces")]),_:1}),k,f,r(),n(o,{to:"/reference/recaptcha.desktop.wpf/"},{default:a(()=>[r("ReCaptcha.Desktop.WPF")]),_:1})]),x])}const v=s(i,[["render",m],["__file","itheme.html.vue"]]);export{v as default};
