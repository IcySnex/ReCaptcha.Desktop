import{_ as s,M as c,p as l,q as r,R as e,t,N as a,V as o}from"./framework-c4f3d865.js";const i={},d=e("h1",{id:"recaptcha-desktop-wpf",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#recaptcha-desktop-wpf","aria-hidden":"true"},"#"),t(" ReCaptcha.Desktop.WPF")],-1),h=e("p",null,"Contains the ReCaptcha client, reciever & configuration for WPF to handle verifications, window specific configurations and ReCaptcha control with themes.",-1),p=e("strong",null,"Type:",-1),u=e("br",null,null,-1),_=e("strong",null,"Assembly:",-1),f=e("h2",{id:"namespaces",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#namespaces","aria-hidden":"true"},"#"),t(" Namespaces")],-1),m=e("thead",null,[e("tr",null,[e("th",null,"Namespace"),e("th",null,"Description")])],-1),w=e("td",null,"Contains the interface and client to handle verifications.",-1),C=e("td",null,"Contains configurations for ReCaptcha client and window.",-1),k=e("td",null,"Contains all necessary event aguemnts which may get fired during verification.",-1),g=e("td",null,"Contains the ReCaptcha control with support for themes.",-1);function v(x,R){const n=c("RouterLink");return l(),r("div",null,[d,h,e("p",null,[p,t(" Namespace "),u,_,t(),a(n,{to:"/reference/recaptcha.desktop.wpf/"},{default:o(()=>[t("ReCaptcha.Desktop.WPF")]),_:1})]),f,e("table",null,[m,e("tbody",null,[e("tr",null,[e("td",null,[a(n,{to:"/reference/recaptcha.desktop.wpf/client/"},{default:o(()=>[t("Client")]),_:1})]),w]),e("tr",null,[e("td",null,[a(n,{to:"/reference/recaptcha.desktop.wpf/configuration/"},{default:o(()=>[t("Configuration")]),_:1})]),C]),e("tr",null,[e("td",null,[a(n,{to:"/reference/recaptcha.desktop.wpf/eventargs/"},{default:o(()=>[t("EventArgs")]),_:1})]),k]),e("tr",null,[e("td",null,[a(n,{to:"/reference/recaptcha.desktop.wpf/ui/"},{default:o(()=>[t("UI")]),_:1})]),g])])])])}const b=s(i,[["render",v],["__file","index.html.vue"]]);export{b as default};
